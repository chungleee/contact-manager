{"version":3,"sources":["components/Header.js","context.js","components/Contact.js","components/ContactList.js","components/pages/About.js","components/pages/NotFound.js","components/TextInputGroup.js","components/AddContact.js","components/EditContact.js","components/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","ContactList","react","components_Contact","About","NotFound","TextInputGroup","label","placeholder","onChange","error","htmlFor","AddContact1","errors","onChangeHandler","event","defineProperty","target","validateFields","isEmpty","isValid","onSubmitHandler","_this$state","_this$validateFields","newContact","preventDefault","abrupt","post","history","push","_this$state2","onSubmit","components_TextInputGroup","EditContact","updateContact","match","params","put","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","components_Header","Switch","Route","exact","path","component","AddContact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4SAIMA,EAAS,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,SACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,gBAAgBJ,GACtCC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAU,WAAWG,GAAG,KAAIN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAA/C,SAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAU,WAAWG,GAAG,gBAAeN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAA1D,gBAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAU,WAAWG,GAAG,UAASN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAApD,eASdN,EAAOU,aAAe,CACpBR,SAAU,UAOGF,iEC/BTW,EAAUC,IAAMC,gBAGhBC,EAAU,SAACC,EAAOC,GACtB,OAAOA,EAAOC,MACZ,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAC9B,OAAOA,EAAQC,KAAOP,EAAOQ,YAGnC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAACL,GAC5B,OAAOA,EAAQC,KAAOP,EAAOQ,QAAQD,GACjCD,EAAUN,EAAOQ,QACjBF,MAIV,QACE,OAAOP,IAMAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAC5B,GACTe,EAAKc,SAAS,SAAC9B,GACb,OAAOD,EAAQC,EAAOC,OAL9Be,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAhD,EAAAiD,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAWsBC,IAAMC,IAAI,8CAXhC,OAWUN,EAXVE,EAAAK,KAYI7B,KAAKY,SAAS,CAAEzB,SAAUmC,EAAIQ,OAZlC,wBAAAN,EAAAO,SAAAV,EAAArB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAgBI,OACE9C,EAAAC,EAAAC,cAACM,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKgC,MAAMC,cAlBpBtC,EAAA,CAA8BuC,aAwBjBC,EAAWzD,EAAQyD,SCuBjBC,6MA7EbtD,MAAQ,CACNuD,iBAAiB,KAGnBC,YAAc,WACZxC,EAAKc,SAAS,CACZyB,iBAAkBvC,EAAKhB,MAAMuD,qBAIjCE,oDAAgB,SAAAlB,EAAO/B,EAAIqB,GAAX,OAAAQ,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,IAAMa,OAAN,8CAAAhD,OAA2DF,IADnD,OAEdqB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAF7B,wBAAAkC,EAAAO,SAAAV,EAAArB,yIAKP,IAAAyC,EAAAzC,KAAA0C,EAE4B1C,KAAKgC,MAAM3C,QAAtCC,EAFDoD,EAECpD,GAAIqD,EAFLD,EAEKC,KAAMC,EAFXF,EAEWE,MAAOC,EAFlBH,EAEkBG,MACjBR,EAAoBrC,KAAKlB,MAAzBuD,gBAER,OACEnE,EAAAC,EAAAC,cAAC+D,EAAD,KAEI,SAACnB,GAAU,IACDL,EAAaK,EAAbL,SACR,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACGuE,EACDzE,EAAAC,EAAAC,cAAA,KACE0E,QAASL,EAAKH,YACdjE,UAAU,mBACV0E,MAAO,CAACC,OAAQ,aAGlB9E,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACV0E,MAAO,CAACC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OAClDJ,QAASL,EAAKF,cAAcY,KAAKV,EAAMnD,EAAIqB,KAG7CzC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,iBAAAgB,OAAmBF,IACzBpB,EAAAC,EAAAC,cAAA,KACEC,UAAU,oBACV0E,MAAO,CACLE,MAAO,QACPD,OAAQ,UACRE,MAAO,QACPE,YAAa,YAMnBf,EAEMnE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwCuE,GACxC1E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwCwE,IAG5C,eA/DAX,aC4BPmB,mLA5BX,OACEnF,EAAAC,EAAAC,cAAC+D,EAAD,KAEI,SAACnB,GAAU,IACF7B,EAAY6B,EAAZ7B,SACP,OACEjB,EAAAC,EAAAC,cAACkF,EAAA,SAAD,KACEpF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,WADF,SAIEc,EAASO,IAAI,SAACL,GACZ,OAAOnB,EAAAC,EAAAC,cAACmF,EAAD,CACLxC,IAAK1B,EAAQC,GACbD,QAASA,gBAhBL6C,aCQXsB,EAVD,WACZ,OACEtF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,yBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,gCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,mBCISoF,EATE,SAACzB,GAChB,OACE9D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,sBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,6CCHAqF,EAAiB,SAAA1F,GAAgE,IAA7D2F,EAA6D3F,EAA7D2F,MAAOhB,EAAsD3E,EAAtD2E,KAAM3B,EAAgDhD,EAAhDgD,MAAO4C,EAAyC5F,EAAzC4F,YAAa5E,EAA4BhB,EAA5BgB,KAAM6E,EAAsB7F,EAAtB6F,SAAUC,EAAY9F,EAAZ8F,MACzE,OACE5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAO2F,QAASpB,GAAOgB,GACvBzF,EAAAC,EAAAC,cAAA,SACEY,KAAMA,EACN2D,KAAMA,EACNtE,UAAWyF,EAAQ,0CAA4C,+BAC/DF,YAAaA,EACbC,SAAUA,EACV7C,MAAOA,IAER8C,GAAS5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoByF,KAenDJ,EAAejF,aAAe,CAC5BO,KAAM,QAGO0E,yBC+FAM,6MA1HblF,MAAQ,CACN6D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoB,OAAQ,MAGVC,gBAAkB,SAACC,GACjBrE,EAAKc,SAAL3B,OAAAmF,EAAA,EAAAnF,CAAA,GACGkF,EAAME,OAAO1B,KAAOwB,EAAME,OAAOrD,WAItCsD,eAAiB,SAAAtG,GAA0B,IAAxB2E,EAAwB3E,EAAxB2E,KAAMC,EAAkB5E,EAAlB4E,MAAOC,EAAW7E,EAAX6E,MAC1BoB,EAAS,GAcb,OAZGM,IAAQ5B,KACTsB,EAAOtB,KAAO,oBAGb4B,IAAQ3B,KACTqB,EAAOrB,MAAQ,qBAGd2B,IAAQ1B,KACToB,EAAOpB,MAAQ,qBAGV,CACLoB,SACAO,QAASD,IAAQN,OAIrBQ,sDAAkB,SAAApD,EAAOV,EAAUwD,GAAjB,IAAAO,EAAA/B,EAAAC,EAAAC,EAAA8B,EAAAV,EAAAW,EAAAtD,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEhByC,EAAMU,iBAFUH,EAKe5E,EAAKhB,MAA5B6D,EALQ+B,EAKR/B,KAAMC,EALE8B,EAKF9B,MAAOC,EALL6B,EAKK7B,MALL8B,EAQY7E,EAAKwE,eAAexE,EAAKhB,OAA7CmF,EARQU,EAQRV,OARQU,EAQAH,QARA,CAAAhD,EAAAE,KAAA,eAWd5B,EAAKc,SAAS,CAAEqD,WAXFzC,EAAAsD,OAAA,wBAgBVF,EAAa,CAAEjC,OAAMC,QAAOC,SAhBlBrB,EAAAE,KAAA,EAmBEC,IAAMoD,KAAK,6CAA8CH,GAnB3D,OAmBVtD,EAnBUE,EAAAK,KAoBhBlB,EAAS,CAAC3B,KAAM,cAAeO,QAAS+B,EAAIQ,OAI5ChC,EAAKc,SAAS,CACZ+B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoB,OAAQ,KAIVnE,EAAKkC,MAAMgD,QAAQC,KAAK,KAhCR,yBAAAzD,EAAAO,SAAAV,EAAArB,yIAmCT,IAAAyC,EAAAzC,KAAAkF,EAC8BlF,KAAKlB,MAAnC6D,EADAuC,EACAvC,KAAMC,EADNsC,EACMtC,MAAOC,EADbqC,EACarC,MAAOoB,EADpBiB,EACoBjB,OAE3B,OACE/F,EAAAC,EAAAC,cAAC+D,EAAD,KAEI,SAACnB,GAAU,IACDL,EAAaK,EAAbL,SACR,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM+G,SAAU1C,EAAKgC,gBAAgBtB,KAAKV,EAAM9B,IAC9CzC,EAAAC,EAAAC,cAACgH,EAAD,CACEzB,MAAM,OACNhB,KAAK,OACLiB,YAAY,aACZ5C,MAAO2B,EACPkB,SAAUpB,EAAKyB,gBACfJ,MAAOG,EAAOtB,OAEhBzE,EAAAC,EAAAC,cAACgH,EAAD,CACEpG,KAAK,QACL2E,MAAM,QACNhB,KAAK,QACLiB,YAAY,cACZ5C,MAAO4B,EACPiB,SAAUpB,EAAKyB,gBACfJ,MAAOG,EAAOrB,QAEhB1E,EAAAC,EAAAC,cAACgH,EAAD,CACEzB,MAAM,QACNhB,KAAK,QACLiB,YAAY,cACZ5C,MAAO6B,EACPgB,SAAUpB,EAAKyB,gBACfJ,MAAOG,EAAOpB,QAEhB3E,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACVW,KAAK,UAFP,2BA5GMkD,aC0IXmD,6MAzIbvG,MAAQ,CACN6D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoB,OAAQ,MAcVC,gBAAkB,SAACC,GACjBrE,EAAKc,SAAL3B,OAAAmF,EAAA,EAAAnF,CAAA,GACGkF,EAAME,OAAO1B,KAAOwB,EAAME,OAAOrD,WAItCsD,eAAiB,SAAAtG,GAA0B,IAAxB2E,EAAwB3E,EAAxB2E,KAAMC,EAAkB5E,EAAlB4E,MAAOC,EAAW7E,EAAX6E,MAC1BoB,EAAS,GAcb,OAZGM,IAAQ5B,KACTsB,EAAOtB,KAAO,oBAGb4B,IAAQ3B,KACTqB,EAAOrB,MAAQ,qBAGd2B,IAAQ1B,KACToB,EAAOpB,MAAQ,qBAGV,CACLoB,SACAO,QAASD,IAAQN,OAIrBQ,sDAAkB,SAAApD,EAAOV,EAAUwD,GAAjB,IAAAO,EAAA/B,EAAAC,EAAAC,EAAAvD,EAAAqF,EAAAV,EAAAqB,EAAAhE,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEhByC,EAAMU,iBAFUH,EAKe5E,EAAKhB,MAA5B6D,EALQ+B,EAKR/B,KAAMC,EALE8B,EAKF9B,MAAOC,EALL6B,EAKK7B,MACbvD,EAAOQ,EAAKkC,MAAMuD,MAAMC,OAAxBlG,GANQqF,EASY7E,EAAKwE,eAAexE,EAAKhB,OAA7CmF,EATQU,EASRV,OATQU,EASAH,QATA,CAAAhD,EAAAE,KAAA,eAYd5B,EAAKc,SAAS,CAAEqD,WAZFzC,EAAAsD,OAAA,wBAgBVQ,EAAgB,CACpB3C,OACAC,QACAC,SAnBcrB,EAAAE,KAAA,GAsBEC,IAAM8D,IAAN,8CAAAjG,OAAwDF,GAAMgG,GAtBhE,QAsBVhE,EAtBUE,EAAAK,KAwBhBlB,EAAS,CAAC3B,KAAM,iBAAkBO,QAAS+B,EAAIQ,OAI/ChC,EAAKc,SAAS,CACZ+B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoB,OAAQ,KAIVnE,EAAKkC,MAAMgD,QAAQC,KAAK,KApCR,yBAAAzD,EAAAO,SAAAV,EAAArB,mRArCRV,EAAOU,KAAKgC,MAAMuD,MAAMC,OAAxBlG,YACUqC,IAAMC,IAAN,8CAAApC,OAAwDF,WAApEgC,WACuBA,EAAIQ,KAA1Ba,SAAMC,UAAOC,UACpB7C,KAAKY,SAAS,CACZ+B,OACAC,QACAC,6IAsEK,IAAAJ,EAAAzC,KAAAkF,EAC8BlF,KAAKlB,MAAnC6D,EADAuC,EACAvC,KAAMC,EADNsC,EACMtC,MAAOC,EADbqC,EACarC,MAAOoB,EADpBiB,EACoBjB,OAE3B,OACE/F,EAAAC,EAAAC,cAAC+D,EAAD,KAEI,SAACnB,GAAU,IACDL,EAAaK,EAAbL,SACR,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM+G,SAAU1C,EAAKgC,gBAAgBtB,KAAKV,EAAM9B,IAC9CzC,EAAAC,EAAAC,cAACgH,EAAD,CACEzB,MAAM,OACNhB,KAAK,OACLiB,YAAY,aACZ5C,MAAO2B,EACPkB,SAAUpB,EAAKyB,gBACfJ,MAAOG,EAAOtB,OAEhBzE,EAAAC,EAAAC,cAACgH,EAAD,CACEpG,KAAK,QACL2E,MAAM,QACNhB,KAAK,QACLiB,YAAY,cACZ5C,MAAO4B,EACPiB,SAAUpB,EAAKyB,gBACfJ,MAAOG,EAAOrB,QAEhB1E,EAAAC,EAAAC,cAACgH,EAAD,CACEzB,MAAM,QACNhB,KAAK,QACLiB,YAAY,cACZ5C,MAAO6B,EACPgB,SAAUpB,EAAKyB,gBACfJ,MAAOG,EAAOpB,QAEhB3E,EAAAC,EAAAC,cAAA,UACEC,UAAU,gBACVW,KAAK,UAFP,8BA3HMkD,aCJLwD,6MACnB5G,MAAQ,CACN6G,MAAO,GACPC,KAAM,uFAGY,IAAAnD,EAAAzC,KAClB6F,MAAM,gDACHC,KAAK,SAACC,GACL,OAAOA,EAASC,SAEjBF,KAAK,SAAChE,GACJW,EAAK7B,SAAS,CACZ+E,MAAO7D,EAAK6D,MACZC,KAAM9D,EAAK8D,0CAKX,IAAAlB,EACiB1E,KAAKlB,MAArB6G,EADDjB,EACCiB,MAAOC,EADRlB,EACQkB,KACf,OACE1H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKuH,GACLzH,EAAAC,EAAAC,cAAA,SAAIwH,WAxBsB1D,aCwDnB+D,mLA1CX,OACE/H,EAAAC,EAAAC,cAAC8H,EAAD,KACEhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACEjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgI,EAAD,CAAQnI,SAAS,oBACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACiI,EAAA,EAAD,KACEnI,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,UAAWpD,IAEbnF,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,eACLC,UAAWC,IAEbxI,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,oBACLC,UAAWpB,IAEbnH,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,SACLC,UAAWjD,IAEbtF,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,QACLC,UAAWf,IAEbxH,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAOG,UAAWhD,gBAlChBvB,aCFEyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvB,MACvB,2DCZNwB,IAASC,OAAO9I,EAAAC,EAAAC,cAAC6I,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxB,KAAK,SAAAyB,GACjCA,EAAaC","file":"static/js/main.fef9218a.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst Header = ({branding}) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link className='nav-link' to='/'><i className='fas fa-home'></i>Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className='nav-link' to='/contact/add'><i className='fas fa-plus'></i>Add Contact</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className='nav-link' to='/about'><i className='fas fa-question'></i>About</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'My App'\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header","import React, { Component } from 'react'\nimport axios from 'axios'\n\n// create context\nconst Context = React.createContext()\n\n// reducer\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => {\n          return contact.id !== action.payload\n        })\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state, \n        contacts: [action.payload, ...state.contacts]\n      }\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) => {\n          return contact.id === action.payload.id \n            ? contact = action.payload \n            : contact\n        }\n        )\n      }\n    default: \n      return state\n  }\n}\n\n\n// Provider component\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => {\n      this.setState((state) => {\n        return reducer(state, action)\n      })\n    }\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n    this.setState({ contacts: res.data })\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\nimport { Consumer } from '../context'\n\nclass Contact extends Component {\n  // state\n  state = {\n    showContactInfo: false\n  }\n  // toggle show contact info\n  onShowClick = () => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    })\n  }\n  // delete\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n    dispatch({type: 'DELETE_CONTACT', payload: id})\n  }\n  \n  render() {\n    // destructuring\n    const { id, name, email, phone } = this.props.contact\n    const { showContactInfo } = this.state\n\n    return (\n      <Consumer>\n        {\n          (value) => {\n            const { dispatch } = value\n            return (\n              <div className='card card-body mb-3'>\n                <h4>\n                  {name} \n                  <i \n                    onClick={this.onShowClick} \n                    className=\"fas fa-sort-down\"\n                    style={{cursor: \"pointer\"}}\n                  >\n                  </i>\n                  <i \n                    className=\"fas fa-times\"\n                    style={{cursor: \"pointer\", float: 'right', color: 'red'}}\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  >\n                  </i>\n                  <Link to={`/contact/edit/${id}`}>\n                    <i \n                      className=\"fas fa-pencil-alt\" \n                      style={{\n                        float: 'right', \n                        cursor: 'pointer',\n                        color: 'black',\n                        marginRight: '1rem'\n                      }}>\n                    </i>\n                  </Link>\n                </h4>\n                {\n                  showContactInfo\n                    ? (\n                        <ul className='list-group'>\n                          <li className='list-group-item'>Email: {email}</li>\n                          <li className='list-group-item'>Phone: {phone}</li>\n                        </ul>\n                      )\n                    : null\n                }\n              </div>\n            )\n          }\n          \n        }\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact","import React, {Component, Fragment} from 'react'\nimport Contact from './Contact';\nimport { Consumer } from '../context'\n\nclass ContactList extends Component {\n  render() {\n    return (\n      <Consumer>\n        {\n          (value) => {\n            const {contacts} = value\n            return (\n              <Fragment>\n                <h1 className=\"display-4 mb-2\">\n                  <span className='text-danger'>Contact</span> List\n                </h1>\n                {\n                  contacts.map((contact) => {\n                    return <Contact\n                      key={contact.id}\n                      contact={contact}\n                    />\n                  })\n                }\n              </Fragment>\n            )\n          }\n          \n        }\n      </Consumer>\n    )\n  }\n}\n\nexport default ContactList","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className='display-4'>About Contact Manager</h1>\n      <p className='lead'>Simpe app to manage contacts</p>\n      <p className=\"text-secondary\">Version 5.0.0</p>\n    </div>\n  )\n}\n\nexport default About","import React from 'react'\n\nconst NotFound = (props) => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TextInputGroup = ({ label, name, value, placeholder, type, onChange, error }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input \n        type={type} \n        name={name}\n        className={error ? \"is-invalid form-control form-control-lg\" : \"form-control form-control-lg\"}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { Consumer } from '../context';\nimport TextInputGroup from './TextInputGroup';\nimport isEmpty from 'is-empty'\n\nclass AddContact1 extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onChangeHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  validateFields = ({name, email, phone}) => {\n    let errors = {}\n\n    if(isEmpty(name)) {\n      errors.name = 'Name is required'\n    }\n\n    if(isEmpty(email)) {\n      errors.email = 'Email is required'\n    }\n\n    if(isEmpty(phone)) {\n      errors.phone = 'Phone is required'\n    }\n\n    return {\n      errors,\n      isValid: isEmpty(errors)\n    }\n  }\n  \n  onSubmitHandler = async (dispatch, event) => {\n    // prevent default refresh on submission\n    event.preventDefault()\n\n    // destructuring\n    const { name, email, phone } = this.state\n\n    // // check for errors\n    const { errors, isValid } = this.validateFields(this.state)\n\n    if(!isValid) {\n      this.setState({ errors })\n      return\n    }\n\n    // construct new contact\n    const newContact = { name, email, phone }\n\n    // post req\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n    dispatch({type: 'ADD_CONTACT', payload: res.data})\n    // dispatch \n\n    // clear input fields\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    // redirect to home\n    this.props.history.push('/')\n  }\n\n  render() {\n    const {name, email, phone, errors} = this.state\n\n    return (\n      <Consumer>\n        {\n          (value) => {\n            const { dispatch } = value\n            return (\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">Add Contact</div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmitHandler.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label='Name'\n                      name='name'\n                      placeholder='Enter name'\n                      value={name}\n                      onChange={this.onChangeHandler}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      type='email'\n                      label='Email'\n                      name='email'\n                      placeholder='Enter email'\n                      value={email}\n                      onChange={this.onChangeHandler}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      label='Phone'\n                      name='phone'\n                      placeholder='Enter phone'\n                      value={phone}\n                      onChange={this.onChangeHandler}\n                      error={errors.phone}\n                    />\n                    <button \n                      className='btn btn-block' \n                      type=\"submit\"\n                    >Add Contact</button>\n                  </form>\n                </div>\n              </div>\n            )\n          }\n        }\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact1","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { Consumer } from '../context';\nimport TextInputGroup from './TextInputGroup';\nimport isEmpty from 'is-empty'\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n    const {name, email, phone} = res.data\n    this.setState({\n      name, \n      email, \n      phone\n    })\n  }\n\n  onChangeHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  validateFields = ({name, email, phone}) => {\n    let errors = {}\n\n    if(isEmpty(name)) {\n      errors.name = 'Name is required'\n    }\n\n    if(isEmpty(email)) {\n      errors.email = 'Email is required'\n    }\n\n    if(isEmpty(phone)) {\n      errors.phone = 'Phone is required'\n    }\n\n    return {\n      errors,\n      isValid: isEmpty(errors)\n    }\n  }\n  \n  onSubmitHandler = async (dispatch, event) => {\n    // prevent default refresh on submission\n    event.preventDefault()\n\n    // destructuring\n    const { name, email, phone } = this.state\n    const { id } = this.props.match.params\n\n    // // check for errors\n    const { errors, isValid } = this.validateFields(this.state)\n\n    if(!isValid) {\n      this.setState({ errors })\n      return\n    }\n\n    const updateContact = {\n      name, \n      email, \n      phone\n    }\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\n\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data })\n\n\n    // clear input fields\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    // redirect to home\n    this.props.history.push('/')\n  }\n\n  render() {\n    const {name, email, phone, errors} = this.state\n\n    return (\n      <Consumer>\n        {\n          (value) => {\n            const { dispatch } = value\n            return (\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">Edit Contact</div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmitHandler.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label='Name'\n                      name='name'\n                      placeholder='Enter name'\n                      value={name}\n                      onChange={this.onChangeHandler}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      type='email'\n                      label='Email'\n                      name='email'\n                      placeholder='Enter email'\n                      value={email}\n                      onChange={this.onChangeHandler}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      label='Phone'\n                      name='phone'\n                      placeholder='Enter phone'\n                      value={phone}\n                      onChange={this.onChangeHandler}\n                      error={errors.phone}\n                    />\n                    <button \n                      className='btn btn-block' \n                      type=\"submit\"\n                    >Update Contact</button>\n                  </form>\n                </div>\n              </div>\n            )\n          }\n        }\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact","import React, { Component } from 'react'\n\nexport default class Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n         this.setState({\n           title: data.title,\n           body: data.body\n         })\n      })\n  }\n\n  render() {\n    const { title, body } = this.state\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Header from './components/Header';\nimport ContactList from './components/ContactList';\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\n\nimport { Provider } from './context'\nimport AddContact from './components/AddContact';\nimport EditContact from './components/EditContact';\nimport Test from './components/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding='Contact Manager' />\n            <div className=\"container\">\n              <Switch>\n                <Route \n                  exact \n                  path='/' \n                  component={ContactList}\n                />\n                <Route \n                  exact\n                  path='/contact/add'\n                  component={AddContact}\n                />\n                <Route \n                  exact\n                  path='/contact/edit/:id'\n                  component={EditContact}\n                />\n                <Route\n                  exact\n                  path='/about'\n                  component={About}\n                />\n                <Route \n                  exact\n                  path='/test'\n                  component={Test}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}